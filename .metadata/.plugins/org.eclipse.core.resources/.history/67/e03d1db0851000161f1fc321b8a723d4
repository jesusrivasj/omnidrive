package com.aiss.omnidrive.server.resources;

import org.restlet.data.ChallengeResponse;
import org.restlet.data.ChallengeScheme;
import org.restlet.resource.ClientResource;

import com.aiss.omnidrive.shared.drive.files.DriveFilesCollection;
import com.aiss.omnidrive.shared.drive.user.DriveUserInfo;


public class DriveResource {
	
	private static final String BASE_URL = "https://www.googleapis.com/drive/v3";
	private static final String TYPE_TOKEN = "Bearer";
	
	public static DriveUserInfo getUserInfo(String token){
		DriveUserInfo userInfo;
		ClientResource connection;
		ChallengeResponse authorization;
		
		connection = new ClientResource(BASE_URL + "/about");
		connection.addQueryParameter("fields", "appInstalled,exportFormats,folderColorPalette,importFormats,kind,maxImportSizes,maxUploadSize,storageQuota,user");
		authorization = new ChallengeResponse(new ChallengeScheme("OAuth2", TYPE_TOKEN));
		authorization.setRawValue(token);
		connection.setChallengeResponse(authorization);
		
		userInfo = connection.get(DriveUserInfo.class);
		
		return userInfo;
	}
	
	public static DriveFilesCollection getFiles(String token, String parent){
		DriveFilesCollection files;
		ClientResource connection;
		ChallengeResponse authorization;
		String q;
		
		q = "'" + parent + "' in parents and trashed = false";
		connection = new ClientResource(BASE_URL + "/files");
		connection.addQueryParameter("fields", "files,kind,nextPageToken");
		connection.addQueryParameter("q", q);
		authorization = new ChallengeResponse(new ChallengeScheme("OAuth2", TYPE_TOKEN));
		authorization.setRawValue(token);
		connection.setChallengeResponse(authorization);
		
		files = connection.get(DriveFilesCollection.class);
		
		return files;
	}
}
