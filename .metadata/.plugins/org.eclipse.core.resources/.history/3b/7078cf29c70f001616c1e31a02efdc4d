package com.aiss.omnidrive.client.views.dropbox;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import com.aiss.omnidrive.client.controllers.DriveController;
import com.aiss.omnidrive.client.rpc.OAuthService;
import com.aiss.omnidrive.client.rpc.OAuthServiceAsync;
import com.aiss.omnidrive.shared.OAuthToken;
import com.google.gwt.core.client.GWT;
import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.user.client.Cookies;
import com.google.gwt.user.client.History;
import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.rpc.AsyncCallback;
import com.google.gwt.user.client.ui.Anchor;
import com.google.gwt.user.client.ui.Composite;
import com.google.gwt.user.client.ui.FlowPanel;
import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.Panel;

public class DropboxMenuView extends Composite {
	
	private final OAuthServiceAsync oauthService = GWT.create(OAuthService.class);
	
	public DropboxMenuView(){
		new DropboxMenuView(new HashMap<String, String>());
	}
	
	public DropboxMenuView(Map<String, String> params){
		final Panel dropboxMenu;
		
		dropboxMenu = new FlowPanel();
		dropboxMenu.addStyleName("sidenavMenuContent");
		
		if (!History.getToken().isEmpty()) {
			if (History.getToken().equals("dropboxConnect")) {
				String code = Window.Location.getParameterMap().get("authCode").get(0);
				oauthService.getToken("dropbox", code, new AsyncCallback<OAuthToken>() {

					@Override
					public void onSuccess(OAuthToken token) {
						if (token.isCorrect()) {
							Date tokenExpireIn = new Date(new Date().getTime() + (30 * 24 * 60 * 60 * 1000));
							Cookies.setCookie("dropboxToken", token.getAccessToken(), tokenExpireIn);
							Window.Location.replace(GWT.getHostPageBaseURL());
						} else {
							dropboxMenu.add(new HTML(token.getError()));
						}
					}
					
					@Override
					public void onFailure(Throwable caught) {
						// TODO Auto-generated method stub
						
					}
					
				});
			}
		} else {
			if (DriveController.isConnect()) {
				dropboxMenu.add(new HTML("Conectado"));
				dropboxMenu.add(new HTML("<p>" + Cookies.getCookie("dropboxToken") + "</p>"));
			} else {
				Anchor connectLink = new Anchor("Conectar");
				connectLink.removeStyleName("gwt-Anchor");
				connectLink.addClickHandler(new ClickHandler() {
					
					@Override
					public void onClick(ClickEvent event) {
						// TODO Auto-generated method stub
						oauthService.getDropboxAuthUrl(new AsyncCallback<String>() {
							
							@Override
							public void onSuccess(String authUrl) {
								// TODO Auto-generated method stub
								Window.Location.replace(authUrl);
							}
							
							@Override
							public void onFailure(Throwable caught) {
								// TODO Auto-generated method stub
								Window.alert(caught.getMessage());
							}
						});
					}
				});
				dropboxMenu.add(connectLink);
			}
		}
		
		initWidget(dropboxMenu);
	}
}
