package com.aiss.omnidrive.client.views.drive;

import java.util.Date;
import java.util.Map;

import com.aiss.omnidrive.client.controllers.DriveController;
import com.aiss.omnidrive.client.rpc.DriveService;
import com.aiss.omnidrive.client.rpc.DriveServiceAsync;
import com.aiss.omnidrive.client.rpc.OAuthService;
import com.aiss.omnidrive.client.rpc.OAuthServiceAsync;
import com.aiss.omnidrive.shared.OAuthToken;
import com.aiss.omnidrive.shared.drive.files.DriveFile;
import com.google.gwt.core.client.GWT;
import com.google.gwt.event.dom.client.ClickEvent;
import com.google.gwt.event.dom.client.ClickHandler;
import com.google.gwt.user.client.Cookies;
import com.google.gwt.user.client.Window;
import com.google.gwt.user.client.rpc.AsyncCallback;
import com.google.gwt.user.client.ui.Anchor;
import com.google.gwt.user.client.ui.Composite;
import com.google.gwt.user.client.ui.FlowPanel;
import com.google.gwt.user.client.ui.HTML;
import com.google.gwt.user.client.ui.Panel;

public class DriveFileDetailsView extends Composite {
	
	private final OAuthServiceAsync oauthService = GWT.create(OAuthService.class);
	private final DriveServiceAsync driveService = GWT.create(DriveService.class);
	
	public DriveFileDetailsView(Map<String, String> params){
		
		if (DriveController.isConnect()) {
			if (!DriveController.hasToken()) {
				oauthService.refreshToken("drive", Cookies.getCookie("driveToken"), new AsyncCallback<OAuthToken>() {
				@Override
				public void onSuccess(OAuthToken token) {
					// TODO Auto-generated method stub
					if (token.isCorrect()){
						Date tokenAccessExpireIn = new Date(new Date().getTime() + (token.getExpiresIn() * 1000));
						Cookies.setCookie("driveAccessToken", token.getAccessToken(), tokenAccessExpireIn);
					} else {
						Cookies.removeCookie("driveToken");
						Window.Location.replace(GWT.getHostPageBaseURL());
					}
				}
				@Override
					public void onFailure(Throwable caught) {
						// TODO Auto-generated method stub
						
					}
				});
			}

			final Panel detailsContent;
			detailsContent = new FlowPanel();
			driveService.getFile(Cookies.getCookie("driveAccessToken"), params.get("idFile"), new AsyncCallback<DriveFile>() {
				@Override
				public void onSuccess(DriveFile file) {
					// TODO Auto-generated method stub
					final Anchor iconClose;
					detailsContent.addStyleName("contenedorDetallesArchivo");
					iconClose = new Anchor("X");
					iconClose.removeStyleName("gwt-Anchor");
					iconClose.addStyleName("iconoCierre");
					detailsContent.add(iconClose);
					iconClose.addClickHandler(new ClickHandler() {
						
						@Override
						public void onClick(ClickEvent event) {
							// TODO Auto-generated method stub
							detailsContent.setVisible(false);
						}
					});
					
					HTML fileName = new HTML(file.getName());
					fileName.addStyleName("tituloDetallesArchivo");
					HTML fileType = new HTML();
					fileName.addStyleName("detallesArchivo");
					if (file.isDirectory()) {
						fileType.setText("Carpeta");
					} else {
						fileType.setText(file.getMimeType());
					}
					detailsContent.add(fileName);
					detailsContent.add(fileType);
				}
				
				@Override
				public void onFailure(Throwable caught) {
					// TODO Auto-generated method stub
					
				}
				
			});

			initWidget(detailsContent);
		}
		
	}

}
